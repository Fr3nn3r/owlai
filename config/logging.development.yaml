version: 1
disable_existing_loggers: false

formatters:
  json:
    class: pythonjsonlogger.jsonlogger.JsonFormatter
    format: '%(asctime)s %(levelname)s %(name)s %(process)d %(thread)d %(message)s'
  standard:
    format: '%(asctime)s - %(levelname)s - %(name)s - %(process)d - %(thread)d - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S UTC'
  stdout:
    (): colorlog.ColoredFormatter
    format: "%(log_color)s(%(name)s)[%(filename)s:%(lineno)d] %(levelname)s | %(message)s"
    log_colors:
      DEBUG: "cyan"
      INFO: "green"
      WARNING: "yellow"
      ERROR: "red"
      CRITICAL: "bold_red"

handlers:
  console:
    class: logging.StreamHandler
    level: DEBUG
    formatter: stdout
    stream: ext://sys.stdout

  file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/owlai.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8

  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: json
    filename: logs/owlai.error.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8

  access_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/owlai.access.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8

loggers:
  main:
    level: DEBUG
    handlers: [console, file, error_file]
    propagate: false

  access:
    level: INFO
    handlers: [access_file]
    propagate: false

  owlai:
    level: DEBUG
    handlers: [console, file, error_file]
    propagate: false

  sentence_transformers:
    level: WARNING
    handlers: []
    propagate: false

  httpx:
    level: WARNING
    handlers: []
    propagate: false

  faiss:
    level: WARNING
    handlers: []
    propagate: false

  owlai.telemetry:
    level: ERROR
    handlers: []
    propagate: false

root:
    level: INFO
    handlers: [console, file, error_file] 